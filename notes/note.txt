 Looking for something to read? Here are some of my latest
              thoughts, tips, and tutorials â€” straight from my brain to your
              screen.

Axios

1) When creating a post, I need for my UI:
    title, body, status, tag_names, category_names, image for upload


import axios from 'axios';
import { useEffect, useState } from 'react';

const PostsByTag = ({ tagSlug }) => {
  const [posts, setPosts] = useState([]);

  useEffect(() => {
    axios.get(`http://localhost:8000/api/posts/by-tag/?tag=${tagSlug}`)
      .then(res => setPosts(res.data))
      .catch(err => console.error('Failed to fetch posts by tag:', err));
  }, [tagSlug]);

  return (
    <div>
      <h2>Posts tagged with "{tagSlug}"</h2>
      {posts.map(post => (
        <div key={post.id}>
          <h3>{post.title}</h3>
          <p>{post.body.slice(0, 150)}...</p>
        </div>
      ))}
    </div>
  );
};

export default PostsByTag;




COLORS

Use these for buttons, links, or highlights:

    #00bcd4 â€“ Bright cyan / teal (modern & energetic)

    #4dd0e1 â€“ Softer teal (good for hover/secondary elements)

    #ff9800 â€“ Warm orange (great contrast pop)

    #ffc107 â€“ Amber (pairs well for call-to-actions)

    #ff3d00 â€“ Red-orange (bold, attention-grabbing)


For text, borders, backgrounds:

    #ffffff â€“ White (for high contrast text)

    #f5f5f5 â€“ Light gray (backgrounds, dividers)

    #b0bec5 â€“ Cool gray (subtle text, icons)

    #263238 â€“ Dark gray-blue (secondary dark surfaces)


4. Analogous Colors (blues and greens that blend well)

    #1c3c4e â€“ Muted navy blue

    #1e3c72 â€“ Deep royal blue (stylish headers or gradients)

    #1b524b â€“ Dark teal

    #145374 â€“ Muted ocean blue




















Yes, you can implement a right-hand "paragraph/heading selection" or Table of Contents (ToC) even if you're rendering your blog body using Markdown, but it requires a little setup.

Hereâ€™s a breakdown of what you're aiming for:
âœ… What You Want

A sidebar Table of Contents (ToC) that lists:

    Paragraphs (or better: headings like ##, ###)

    Clicking a heading in the sidebar scrolls to that part of the Markdown content

ðŸ”§ How To Implement It (Step by Step)
âœ… 1. Use remark + rehype plugins to extract headings

Install:

npm install remark-gfm remark-slug remark-autolink-headings

Then in your component:

import ReactMarkdown from "react-markdown";
import remarkGfm from "remark-gfm";
import remarkSlug from "remark-slug";
import remarkAutolinkHeadings from "remark-autolink-headings";

Now render:

<ReactMarkdown
  remarkPlugins={[remarkGfm, remarkSlug, remarkAutolinkHeadings]}
  rehypePlugins={[rehypeSanitize, rehypeHighlight]}
>
  {blog.body}
</ReactMarkdown>

âœ… 2. Extract headings from Markdown body (to build the sidebar)

Add this function to extract headings using a regex (basic method):

function extractHeadings(markdown: string) {
  const headingRegex = /^(#{2,6})\s+(.+)$/gm;
  const headings: { level: number; text: string; slug: string }[] = [];

  let match;
  while ((match = headingRegex.exec(markdown)) !== null) {
    const level = match[1].length;
    const text = match[2];
    const slug = text
      .toLowerCase()
      .replace(/[^\w\s-]/g, "")
      .replace(/\s+/g, "-");
    headings.push({ level, text, slug });
  }

  return headings;
}

Use it in your component:

const headings = extractHeadings(blog.body);

âœ… 3. Render your ToC

<div className="toc">
  <h2>Contents</h2>
  <ul>
    {headings.map(({ level, text, slug }) => (
      <li key={slug} style={{ marginLeft: (level - 2) * 20 }}>
        <a href={`#${slug}`}>{text}</a>
      </li>
    ))}
  </ul>
</div>

âœ… 4. Add styling

.toc {
  position: fixed;
  top: 100px;
  right: 40px;
  width: 250px;
  padding: 1rem;
  background: #f9f9f9;
  border-left: 2px solid #ccc;
}

.toc ul {
  list-style: none;
  padding-left: 0;
}

.toc li a {
  text-decoration: none;
  color: #007acc;
}

âœ… Example Result

If your Markdown has:

## Introduction

### Why AI?

### History

## Conclusion

The right sidebar will show:

Contents
- Introduction
  - Why AI?
  - History
- Conclusion

Clicking on a link scrolls to that heading in the article, because remark-slug adds IDs like id="introduction" to the headings.
âœ… Optional Enhancements

    Smooth scrolling (scroll-behavior: smooth)

    Highlight current section on scroll (using IntersectionObserver)

    Collapse/expand nested sections

âœ… TL;DR

Yes, you can have a right-side ToC even with Markdown by:

    Using remark-slug to give headings ids

    Parsing the Markdown yourself to extract heading text

    Creating a clickable sidebar linking to those headings

Let me know if you'd like the full React component or live example!


















background:
        /* Moonlight glow */
        radial-gradient(
            circle at 25% 25%,
            rgba(255, 255, 224, 0.3),
            transparent 60%
        ),
        /* Soft highlight for extra depth */
            radial-gradient(
                circle at 30% 30%,
                rgba(255, 255, 255, 0.15),
                transparent 70%
            ),
        /* Base gradient */
            linear-gradient(135deg, #121926, #22303f, #34495e, #4a607a);
